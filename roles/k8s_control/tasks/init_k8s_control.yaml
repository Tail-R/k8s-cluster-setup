# - name: Reset Kubernetes control plane
#   command: kubeadm reset -f

- name: Initialize Kubernetes control plane
  command: >
    kubeadm init
    --pod-network-cidr={{ pod_network_cidr }}
    --apiserver-advertise-address={{ ansible_default_ipv4.address }}
  args:
    creates: /etc/kubernetes/admin.conf # Ensure only init once
  register: kubeadm_init
  retries: 3
  delay: 10
  until: kubeadm_init.rc == 0

- name: Check existing kubeadm tokens
  command: kubeadm token list
  register: token_list
  changed_when: false

- name: Create kubeadm token if none exists
  command: kubeadm token create --print-join-command
  register: join_cmd_raw
  when: token_list.stdout_lines | select("search", "^[a-z0-9]{6}\\.[a-z0-9]{16}$") | list | length == 0
  changed_when: token_list.stdout_lines | select("search", "^[a-z0-9]{6}\\.[a-z0-9]{16}$") | list | length == 0

- name: Set join command fact
  set_fact:
    join_command: "{{ join_cmd_raw.stdout }}" # It allows you to pass a join command for workers
  when: join_cmd_raw is defined and join_cmd_raw.stdout != ""

- name: Create .kube directory for remote user
  file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ ansible_user }}/.kube/config
    remote_src: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'